name: example-pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        description: 'test exec'
        default: 'World'
        required: true
        type: string

env:
  BUILD_TYPE: Debug
  
jobs:
  stage_0:
    runs-on: [self-hosted, linux, ARM64]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive' 
# -------------------------------------------------
    - name: check_action_run_0
      run: |
        #
        # Self-Host
        #
        ./configure 0.0.1 OFF 2
        make build
        make deb
# -------------------------------------------------
    - name: job-upload-artifacts
      uses: actions/upload-artifact@v3
      with:
        name: selfhost-build
        path: ${{github.workspace}}/bin/*.deb

  stage_1:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'  
# -------------------------------------------------
    - name: check_action_run_1
      run: |
        FILE=./package.json
        if test -f "$FILE"
        then
          echo "$FILE exists."
        else
          echo "File does not exist"
        fi
      shell: bash
# -------------------------------------------------
    - name: check_action_run_2
      run: >-
        for i in $(find . -type f -name "*.log");
        do
         echo "File: ${i} \n";
         cat $i;
         printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -;
        done
# -------------------------------------------------     
    - name: check_action_run_3
      run: |
        eval "$MULT_LINE_ENV01"
        echo "$MULT_LINE_ENV02"
      env:
        MULT_LINE_ENV01: |
          echo "$PWD"
          ls
          echo "command03"
        MULT_LINE_ENV02: |
          Line 01
          Line 03
          Line 02
# -------------------------------------------------     
      
  stage_2:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 2
      matrix:
        version: [10, 12]
        os: [ubuntu-22.04]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: job-configure
      run: |
        # check ssl
        sudo dpkg -l | grep ssl

        # try fix wrong include
        rm -r ./libs/restbed/dependency/openssl/include/openssl

        sudo ./configure 0.0.1 OFF 2

      env:
        MY_VAR_1: "one"
        MY_VAR_2: "two"
        MY_VAR_3: "three"

    - name: job-build
      run: |
        
        sudo make build

      env:
        MY_VAR_1: "one"
        MY_VAR_2: "two"
        MY_VAR_3: "three"

    - name: job-build-deb
      run: |
          sudo make deb
      env:
          MY_VAR_1: "one"
          MY_VAR_2: "two"
          MY_VAR_3: "three"

    - name: job-upload-artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ota-backend
        path: ${{github.workspace}}/bin/*.deb